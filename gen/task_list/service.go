// Code generated by goa v3.20.1, DO NOT EDIT.
//
// taskList service
//
// Command:
// $ goa gen github.com/eclipse-xfsc/task-sheduler/design

package tasklist

import (
	"context"
)

// TaskList service provides endpoints to work with task lists.
type Service interface {
	// Create a task list and corresponding tasks and put them in respective queues
	// for execution.
	Create(context.Context, *CreateTaskListRequest) (res *CreateTaskListResult, err error)
	// TaskListStatus retrieves a taskList status containing all tasks' unique IDs
	// and statuses from the Cache service.
	TaskListStatus(context.Context, *TaskListStatusRequest) (res *TaskListStatusResponse, err error)
}

// APIName is the name of the API as defined in the design.
const APIName = "task"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "0.0.1"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "taskList"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"Create", "TaskListStatus"}

// CreateTaskListRequest is the payload type of the taskList service Create
// method.
type CreateTaskListRequest struct {
	// TaskList name.
	TaskListName string
	// Data contains JSON payload that will be used for taskList execution.
	Data any
	// Cache key namespace.
	CacheNamespace *string
	// Cache key scope.
	CacheScope *string
}

// CreateTaskListResult is the result type of the taskList service Create
// method.
type CreateTaskListResult struct {
	// Unique taskList identifier.
	TaskListID string
}

type GroupStatus struct {
	// Unique group identifier.
	ID *string
	// Current status of the group
	Status *string
	// Array of TaskStatus
	Tasks []*TaskStatus
}

// TaskListStatusRequest is the payload type of the taskList service
// TaskListStatus method.
type TaskListStatusRequest struct {
	// Unique taskList identifier.
	TaskListID string
}

// TaskListStatusResponse is the result type of the taskList service
// TaskListStatus method.
type TaskListStatusResponse struct {
	// Unique taskList identifier.
	ID string
	// Current status of the taskList
	Status string
	// Array of GroupStatus
	Groups []*GroupStatus
}

type TaskStatus struct {
	// Unique task identifier.
	ID *string
	// Current status of the task
	Status *string
}
