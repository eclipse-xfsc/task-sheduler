// Code generated by goa v3.20.1, DO NOT EDIT.
//
// task client
//
// Command:
// $ goa gen github.com/eclipse-xfsc/task-sheduler/design

package task

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "task" service client.
type Client struct {
	CreateEndpoint     goa.Endpoint
	TaskResultEndpoint goa.Endpoint
}

// NewClient initializes a "task" service client given the endpoints.
func NewClient(create, taskResult goa.Endpoint) *Client {
	return &Client{
		CreateEndpoint:     create,
		TaskResultEndpoint: taskResult,
	}
}

// Create calls the "Create" endpoint of the "task" service.
func (c *Client) Create(ctx context.Context, p *CreateTaskRequest) (res *CreateTaskResult, err error) {
	var ires any
	ires, err = c.CreateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CreateTaskResult), nil
}

// TaskResult calls the "TaskResult" endpoint of the "task" service.
func (c *Client) TaskResult(ctx context.Context, p *TaskResultRequest) (res any, err error) {
	var ires any
	ires, err = c.TaskResultEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(any), nil
}
