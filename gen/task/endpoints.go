// Code generated by goa v3.20.1, DO NOT EDIT.
//
// task endpoints
//
// Command:
// $ goa gen github.com/eclipse-xfsc/task-sheduler/design

package task

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "task" service endpoints.
type Endpoints struct {
	Create     goa.Endpoint
	TaskResult goa.Endpoint
}

// NewEndpoints wraps the methods of the "task" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Create:     NewCreateEndpoint(s),
		TaskResult: NewTaskResultEndpoint(s),
	}
}

// Use applies the given middleware to all the "task" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Create = m(e.Create)
	e.TaskResult = m(e.TaskResult)
}

// NewCreateEndpoint returns an endpoint function that calls the method
// "Create" of service "task".
func NewCreateEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreateTaskRequest)
		return s.Create(ctx, p)
	}
}

// NewTaskResultEndpoint returns an endpoint function that calls the method
// "TaskResult" of service "task".
func NewTaskResultEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*TaskResultRequest)
		return s.TaskResult(ctx, p)
	}
}
