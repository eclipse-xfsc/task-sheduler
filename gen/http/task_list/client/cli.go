// Code generated by goa v3.20.1, DO NOT EDIT.
//
// taskList HTTP client CLI support package
//
// Command:
// $ goa gen github.com/eclipse-xfsc/task-sheduler/design

package client

import (
	"encoding/json"
	"fmt"

	tasklist "github.com/eclipse-xfsc/task-sheduler/gen/task_list"
)

// BuildCreatePayload builds the payload for the taskList Create endpoint from
// CLI flags.
func BuildCreatePayload(taskListCreateBody string, taskListCreateTaskListName string, taskListCreateCacheNamespace string, taskListCreateCacheScope string) (*tasklist.CreateTaskListRequest, error) {
	var err error
	var body any
	{
		err = json.Unmarshal([]byte(taskListCreateBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "\"Deserunt dolor et autem quidem fugiat sint.\"")
		}
	}
	var taskListName string
	{
		taskListName = taskListCreateTaskListName
	}
	var cacheNamespace *string
	{
		if taskListCreateCacheNamespace != "" {
			cacheNamespace = &taskListCreateCacheNamespace
		}
	}
	var cacheScope *string
	{
		if taskListCreateCacheScope != "" {
			cacheScope = &taskListCreateCacheScope
		}
	}
	v := body
	res := &tasklist.CreateTaskListRequest{
		Data: v,
	}
	res.TaskListName = taskListName
	res.CacheNamespace = cacheNamespace
	res.CacheScope = cacheScope

	return res, nil
}

// BuildTaskListStatusPayload builds the payload for the taskList
// TaskListStatus endpoint from CLI flags.
func BuildTaskListStatusPayload(taskListTaskListStatusTaskListID string) (*tasklist.TaskListStatusRequest, error) {
	var taskListID string
	{
		taskListID = taskListTaskListStatusTaskListID
	}
	v := &tasklist.TaskListStatusRequest{}
	v.TaskListID = taskListID

	return v, nil
}
